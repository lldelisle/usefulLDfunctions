% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/myBasicFunctions.R
\name{checkStrings}
\alias{checkStrings}
\title{Check if a variable which should contains strings values exists and return values overlapping with the possible}
\usage{
checkStrings(variableS, possible = NA, default = NA, isRequired = T)
}
\arguments{
\item{variableS}{a string containing the name of the variable to check.}

\item{possible}{a vector containing the accepted string values or NA if there is no constrain. Default is NA.}

\item{default}{the result if the \code{variableS} is not assigned or no value overlap with \code{possible} (if \code{possible} is not NA) and isRequired is set to FALSE. Default is NA.}

\item{isRequired}{a logical value indicating if the function should stop in case no value overlap with \code{possible} (if \code{possible} is not NA). Default is TRUE.}
}
\value{
The content of \code{variableS} if they are all included in \code{possible} (if \code{possible} is not NA)
Or the overlap between its content and \code{possible} (if \code{possible} is not NA).
Or the default value
}
\description{
Check if a variable which should contains strings values exists and return values overlapping with the possible
}
\details{
If isRequired is set to \code{TRUE} and the content of \code{variableS} is not valid, it will stop and execute an error.
}
\examples{
myStrings <- c("one", "two", "three")

# No restriction
myCheckedStrings <- checkStrings("myStrings")

# Restriction which match
myCheckedStrings <- checkStrings("myStrings", possible = c("one", "two", "three", "four"))

# Restriction which match partially
myCheckedStrings <- checkStrings("myStrings", possible = c("one", "two"))

# Restriction which does not match
\dontrun{
myCheckedStrings <- checkStrings("myStrings", possible = c("One", "Two"))
}

# A variable which does not exists:
myCheckedStrings <- checkStrings("myImaginaryVariableWhichShouldNotExists", isRequired = FALSE)
}
